# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: greet/greetpb/greet.proto for package 'greet'

require 'grpc'
require_relative './greet_pb.rb'

module Greet
  module GreetService
    # Service
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'greet.GreetService'

      # Unary
      rpc :Greet, GreetRequest, GreetResponse
      # Server Streaming
      rpc :GreetManyTimes, GreetManyTimesRequest, stream(GreetManyTimesResponse)
      # Client Streaming
      rpc :LongGreet, stream(LongGreetRequest), LongGreetResponse
      # BiDi Streaming
      rpc :GreetEveryone, stream(GreetEveryoneRequest), stream(GreetEveryoneResponse)
      # error handling
      # this RPC will throw an exception if the sent number is negative
      # The error being sennt is of type INVALID_ARGUMENT
      rpc :SquareRoot, SquareRootRequest, SquareRootResponse
      rpc :GreetDeadline, GreetDeadlineRequest, GreetDeadlineResponse
    end

    Stub = Service.rpc_stub_class
  end
end
